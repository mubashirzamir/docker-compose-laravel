version: '3'

networks:
  ${COMPOSE_NETWORKS_NAME:-laravel}:

services:
  app:
    build:
      context: ./dockerfiles/development
      dockerfile: nginx.dockerfile
      args:
        - NGINX_VERSION=${COMPOSE_NGINX_VERSION:-nginx:latest}
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - postgres
      - mailhog
    networks:
      - ${COMPOSE_NETWORKS_NAME:laravel}

  postgres:
    image: ${COMPOSE_POSTGRES_VERSION:-postgres:latest}
    restart: unless-stopped
    tty: true
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=laravel
      - POSTGRES_PASSWORD=secret
    volumes:
      - postgres-data-development:/var/lib/postgresql/data
    networks:
      - ${COMPOSE_NETWORKS_NAME:-laravel}

  php:
    build:
      context: ./dockerfiles/development
      dockerfile: php.dockerfile
      args:
        - PHP_VERSION=${COMPOSE_PHP_VERSION:-php-8.4-fpm-alpine}
        - COMPOSER_VERSION=${COMPOSE_COMPOSER_VERSION:-composer:latest}
        - PHP_EXTENSIONS=${COMPOSE_PHP_PACKAGES:-"pdo pdo_mysql pdo_pgsql bcmath exif gd intl mbstring opcache pcntl redis tokenizer xml zip"}
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - ${COMPOSE_NETWORKS_NAME:-laravel}

  redis:
    image: redis:${COMPOSE_REDIS_VERSION:-redis:latest-alpine}
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - ${COMPOSE_NETWORKS_NAME:-laravel}

  composer:
    build:
      context: ./dockerfiles/development
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - ${COMPOSE_NETWORKS_NAME:-laravel}

  npm:
    image: ${COMPOSE_NODE_VERSION:-node:22-alpine}
    volumes:
      - ./src:/var/www/html
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - ${COMPOSE_NETWORKS_NAME:-laravel}

  artisan:
    build:
      context: ./dockerfiles/development
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - ${COMPOSE_NETWORKS_NAME:-laravel}

  mailhog:
    image: mailhog/${COMPOSE_MAILHOG_VERSION:-mailhog/mailhog:latest}
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - ${COMPOSE_NETWORKS_NAME:-laravel}
